////////////////////////////////////////////////////////////////////////////////
// Copyright (c) 1995-2013 Xilinx, Inc.  All rights reserved.
////////////////////////////////////////////////////////////////////////////////
//   ____  ____ 
//  /   /\/   / 
// /___/  \  /    Vendor: Xilinx 
// \   \   \/     Version : 14.7
//  \   \         Application : sch2hdl
//  /   /         Filename : muxx.vf
// /___/   /\     Timestamp : 12/14/2020 17:15:22
// \   \  /  \ 
//  \___\/\___\ 
//
//Command: sch2hdl -intstyle ise -family spartan6 -verilog C:/Users/Admin/Desktop/xilinx_workspace/DigitalProject/muxx.vf -w C:/Users/Admin/Desktop/xilinx_workspace/lab08add/muxx.sch
//Design Name: muxx
//Device: spartan6
//Purpose:
//    This verilog netlist is translated from an ECS schematic.It can be 
//    synthesized and simulated, but it should not be modified. 
//
`timescale  100 ps / 10 ps

module M4_1E_HXILINX_muxx (O, D0, D1, D2, D3, E, S0, S1);
    

   output O;

   input  D0;
   input  D1;
   input  D2;
   input  D3;
   input  E;
   input  S0;
   input  S1;

   reg O;

   always @ ( D0 or D1 or D2 or D3 or E or S0 or S1)
   begin
      if(!E)
      O <= 1'b0;
      else 
      begin
        case({S1,S0})
        2'b00 : O <= D0;
        2'b01 : O <= D1;
        2'b10 : O <= D2;
        2'b11 : O <= D3;
        endcase
      end
   end
    
endmodule
`timescale 100 ps / 10 ps

module CB2CE_HXILINX_muxx(CEO, Q0, Q1, TC, C, CE, CLR);
   
   localparam TERMINAL_COUNT = 2'b11;
   
   output             CEO;
   output             Q0;
   output             Q1;
   output             TC;

   input 	      C;	
   input 	      CE;	
   input 	      CLR;	
   
   reg                Q0;
   reg                Q1;
   
   always @(posedge C or posedge CLR)
     begin
	if (CLR)
	  {Q1, Q0} <= 2'b00;
	else if (CE)
	  {Q1,Q0} <= {Q1,Q0} + 1;
     end
   
   assign CEO = TC & CE;
   assign TC = ({Q1,Q0} == TERMINAL_COUNT);
   
endmodule
`timescale 1ns / 1ps

module muxx(a0, 
            a1, 
            a2, 
            a3, 
            b0, 
            b1, 
            b2, 
            b3, 
            clk, 
            c0, 
            c1, 
            c2, 
            c3, 
            d0, 
            d1, 
            d2, 
            d3, 
            a, 
            b, 
            c, 
            d);

    input a0;
    input a1;
    input a2;
    input a3;
    input b0;
    input b1;
    input b2;
    input b3;
    input clk;
    input c0;
    input c1;
    input c2;
    input c3;
    input d0;
    input d1;
    input d2;
    input d3;
   output a;
   output b;
   output c;
   output d;
   
   wire S0;
   wire S1;
   wire XLXN_49;
   wire XLXN_55;
   wire XLXN_56;
   wire XLXN_57;
   
   (* HU_SET = "XLXI_1_1" *) 
   M4_1E_HXILINX_muxx  XLXI_1 (.D0(a0), 
                              .D1(a1), 
                              .D2(a2), 
                              .D3(a3), 
                              .E(XLXN_55), 
                              .S0(S0), 
                              .S1(S1), 
                              .O(a));
   (* HU_SET = "XLXI_2_2" *) 
   M4_1E_HXILINX_muxx  XLXI_2 (.D0(b0), 
                              .D1(b1), 
                              .D2(b2), 
                              .D3(b3), 
                              .E(XLXN_55), 
                              .S0(S0), 
                              .S1(S1), 
                              .O(b));
   (* HU_SET = "XLXI_4_4" *) 
   M4_1E_HXILINX_muxx  XLXI_4 (.D0(d0), 
                              .D1(d1), 
                              .D2(d2), 
                              .D3(d3), 
                              .E(XLXN_55), 
                              .S0(S0), 
                              .S1(S1), 
                              .O(d));
   (* HU_SET = "XLXI_10_3" *) 
   M4_1E_HXILINX_muxx  XLXI_10 (.D0(c0), 
                               .D1(c1), 
                               .D2(c2), 
                               .D3(c3), 
                               .E(XLXN_55), 
                               .S0(S0), 
                               .S1(S1), 
                               .O(c));
   VCC  XLXI_11 (.P(XLXN_55));
   (* HU_SET = "XLXI_63_5" *) 
   CB2CE_HXILINX_muxx  XLXI_63 (.C(clk), 
                               .CE(XLXN_56), 
                               .CLR(XLXN_57), 
                               .CEO(XLXN_49), 
                               .Q0(S0), 
                               .Q1(S1), 
                               .TC(XLXN_49));
   GND  XLXI_64 (.G(XLXN_49));
   VCC  XLXI_65 (.P(XLXN_56));
   GND  XLXI_66 (.G(XLXN_57));
endmodule
