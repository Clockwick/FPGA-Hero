////////////////////////////////////////////////////////////////////////////////
// Copyright (c) 1995-2013 Xilinx, Inc.  All rights reserved.
////////////////////////////////////////////////////////////////////////////////
//   ____  ____ 
//  /   /\/   / 
// /___/  \  /    Vendor: Xilinx 
// \   \   \/     Version : 14.7
//  \   \         Application : sch2hdl
//  /   /         Filename : commonn.vf
// /___/   /\     Timestamp : 12/14/2020 17:15:22
// \   \  /  \ 
//  \___\/\___\ 
//
//Command: sch2hdl -intstyle ise -family spartan6 -verilog C:/Users/Admin/Desktop/xilinx_workspace/DigitalProject/commonn.vf -w C:/Users/Admin/Desktop/xilinx_workspace/DigitalProject/commonn.sch
//Design Name: commonn
//Device: spartan6
//Purpose:
//    This verilog netlist is translated from an ECS schematic.It can be 
//    synthesized and simulated, but it should not be modified. 
//
`timescale 100 ps / 10 ps

module CB2CE_HXILINX_commonn(CEO, Q0, Q1, TC, C, CE, CLR);
   
   localparam TERMINAL_COUNT = 2'b11;
   
   output             CEO;
   output             Q0;
   output             Q1;
   output             TC;

   input 	      C;	
   input 	      CE;	
   input 	      CLR;	
   
   reg                Q0;
   reg                Q1;
   
   always @(posedge C or posedge CLR)
     begin
	if (CLR)
	  {Q1, Q0} <= 2'b00;
	else if (CE)
	  {Q1,Q0} <= {Q1,Q0} + 1;
     end
   
   assign CEO = TC & CE;
   assign TC = ({Q1,Q0} == TERMINAL_COUNT);
   
endmodule
`timescale 1ns / 1ps

module commonn(clk_218, 
               c0_, 
               c1_, 
               c2_, 
               c3);

    input clk_218;
   output c0_;
   output c1_;
   output c2_;
   output c3;
   
   wire c0;
   wire c1;
   wire c2;
   wire Q0;
   wire Q1;
   wire XLXN_1;
   wire XLXN_4;
   wire XLXN_5;
   wire XLXN_6;
   wire XLXN_22;
   wire XLXN_23;
   wire XLXN_24;
   wire XLXN_25;
   
   (* HU_SET = "XLXI_1_0" *) 
   CB2CE_HXILINX_commonn  XLXI_1 (.C(clk_218), 
                                 .CE(XLXN_4), 
                                 .CLR(XLXN_22), 
                                 .CEO(XLXN_1), 
                                 .Q0(Q0), 
                                 .Q1(Q1), 
                                 .TC(XLXN_1));
   VCC  XLXI_2 (.P(XLXN_4));
   AND2  XLXI_3 (.I0(Q1), 
                .I1(Q0), 
                .O(XLXN_23));
   AND2  XLXI_4 (.I0(Q1), 
                .I1(XLXN_24), 
                .O(c2));
   AND2  XLXI_5 (.I0(XLXN_25), 
                .I1(Q0), 
                .O(c1));
   AND2  XLXI_6 (.I0(XLXN_6), 
                .I1(XLXN_5), 
                .O(c0));
   INV  XLXI_7 (.I(Q0), 
               .O(XLXN_5));
   INV  XLXI_8 (.I(Q1), 
               .O(XLXN_6));
   GND  XLXI_11 (.G(XLXN_1));
   GND  XLXI_12 (.G(XLXN_22));
   INV  XLXI_13 (.I(XLXN_23), 
                .O(c3));
   INV  XLXI_14 (.I(c2), 
                .O(c2_));
   INV  XLXI_15 (.I(c1), 
                .O(c1_));
   INV  XLXI_16 (.I(c0), 
                .O(c0_));
   INV  XLXI_17 (.I(Q0), 
                .O(XLXN_24));
   INV  XLXI_18 (.I(Q1), 
                .O(XLXN_25));
endmodule
